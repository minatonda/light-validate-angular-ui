{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./lib/dist/fesm5/light-validate-angular-ui.js","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/light-validate/light-rule-must-be-the-same.ts","./src/light-validate/light-rule-must-not-be-the-same.ts","./src/light-validate/light-rule-only-number.ts","./src/light-validate/light-rule-only-text.ts","./src/light-validate/light-rule-required.ts","./src/light-validate/user.light-mapping.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACyE;AAC3E;;AAE1C,mBAAmB,4DAAc;;AAEjC;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+DAAQ;AACxB,uCAAuC,yBAAyB,EAAE;AAClE,8CAA8C,gCAAgC,EAAE;AAChF,0CAA0C,4BAA4B,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+DAAQ;AACxB,uCAAuC,yBAAyB,EAAE;AAClE,8CAA8C,gCAAgC,EAAE;AAChF,0CAA0C,4BAA4B,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+DAAQ;AAC5B,2CAA2C,yBAAyB,EAAE;AACtE,kDAAkD,gCAAgC,EAAE;AACpF,8CAA8C,4BAA4B,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA,gBAAgB,+DAAQ;AACxB,uCAAuC,yBAAyB,EAAE;AAClE,8CAA8C,gCAAgC,EAAE;AAChF,0CAA0C,4BAA4B,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,SAAS,gCAAgC,OAAO,oDAAM,qBAAqB,GAAG;AAC9E,SAAS,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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { __decorate, __param } from 'tslib';\nimport { InjectionToken, EventEmitter, Inject, ElementRef, Input, Output, Directive, NgModule } from '@angular/core';\nimport { validate } from 'light-validate';\n\nvar RESOLVER = new InjectionToken('ui-light-validate.resolver');\n\nvar UiLightValidateDirective = /** @class */ (function () {\n    function UiLightValidateDirective(resolver, el) {\n        this.resolver = resolver;\n        this.el = el;\n        this.onValidate = new EventEmitter();\n    }\n    UiLightValidateDirective.prototype.ngOnInit = function () {\n        this.initialize(this.el.nativeElement);\n    };\n    UiLightValidateDirective.prototype.initialize = function (el) {\n        var _this = this;\n        // criar span que irá conter o erro.\n        var htmlErrorElement = this.getHtmlErrorElement(el);\n        if (this.isIconEnabled(el)) {\n            // criar div que irá conter o icone referente a validação\n            var htmlIconElement = this.getHtmlIconElement(el);\n            !el.parentNode.contains(htmlIconElement) && el.parentNode.insertBefore(htmlIconElement, el);\n        }\n        var onValidateThen = function () {\n            //remover span com classe 'error' referente ao campo do DOM...caso já esteja presente\n            el.parentNode.contains(htmlErrorElement) && el.parentNode.removeChild(htmlErrorElement);\n            el.parentElement.classList.remove(_this.getElementInvalidClass(el));\n            el.parentElement.classList.add(_this.getElementValidClass(el));\n            //disparar callback externo onValidate\n            _this.onValidate.emit(null);\n        };\n        var onValidateCatch = function (exceptions) {\n            var exception = exceptions.shift();\n            if (exception) {\n                //setar texto do span com classe 'error' referente ao campo do DOM...\n                htmlErrorElement.innerHTML = _this.resolver ? _this.resolver.label(exception) : exception.code;\n                //adicionar span com classe 'error' referente ao campo do DOM...caso já não esteja presente\n                !el.parentNode.contains(htmlErrorElement) && el.parentNode.appendChild(htmlErrorElement);\n                el.parentElement.classList.add(_this.getElementInvalidClass(el));\n                el.parentElement.classList.remove(_this.getElementValidClass(el));\n                //disparar callback externo onValidate\n                _this.onValidate.emit(exception);\n            }\n            else {\n                onValidateThen();\n            }\n        };\n        var onValidateFinally = function () {\n        };\n        var firstTrigger = true;\n        if (this.isValidateOnBlurEnabled(el)) {\n            el.onblur = function (event) {\n                firstTrigger = false;\n                validate(_this.target, _this.validate, _this.property)\n                    .then(function () { return onValidateThen(); })\n                    .catch(function (errors) { return onValidateCatch(errors); })\n                    .finally(function () { return onValidateFinally(); });\n            };\n        }\n        ;\n        if (this.isValidateOnChangeEnabled(el)) {\n            el.onchange = function (event) {\n                firstTrigger = false;\n                validate(_this.target, _this.validate, _this.property)\n                    .then(function () { return onValidateThen(); })\n                    .catch(function (errors) { return onValidateCatch(errors); })\n                    .finally(function () { return onValidateFinally(); });\n            };\n        }\n        if (this.isValidateOnBlurEnabled(el) || this.isValidateOnChangeEnabled(el)) {\n            el.onkeyup = function (event) {\n                var isKeydown = el.getAttribute('modal-rule-keydown');\n                if (!firstTrigger || isKeydown) {\n                    validate(_this.target, _this.validate, _this.property)\n                        .then(function () { return onValidateThen(); })\n                        .catch(function (errors) { return onValidateCatch(errors); })\n                        .finally(function () { return onValidateFinally(); });\n                }\n            };\n        }\n        else if (this.isValidateOnKeyUpEnabled(el)) {\n            el.onkeyup = function (event) {\n                validate(_this.target, _this.validate, _this.property)\n                    .then(function () { return onValidateThen(); })\n                    .catch(function (errors) { return onValidateCatch(errors); })\n                    .finally(function () { return onValidateFinally(); });\n            };\n        }\n        ;\n    };\n    UiLightValidateDirective.prototype.isValidateOnBlurEnabled = function (el) {\n        return this.getBoolValueFromAttr(el, 'ui-light-validate-on-blur', true);\n    };\n    UiLightValidateDirective.prototype.isValidateOnChangeEnabled = function (el) {\n        return this.getBoolValueFromAttr(el, 'ui-light-validate-on-change', true);\n    };\n    UiLightValidateDirective.prototype.isValidateOnKeyUpEnabled = function (el) {\n        return this.getBoolValueFromAttr(el, 'ui-light-validate-on-keyup', true);\n    };\n    UiLightValidateDirective.prototype.isIconEnabled = function (el) {\n        return this.getBoolValueFromAttr(el, 'ui-light-validate-icon-enabled', false);\n    };\n    UiLightValidateDirective.prototype.getElementInvalidClass = function (el) {\n        return el.getAttribute('ui-light-validate-invalid-class') || 'light-invalid';\n    };\n    UiLightValidateDirective.prototype.getElementValidClass = function (el) {\n        return el.getAttribute('ui-light-validate-valid-class') || 'light-valid';\n    };\n    UiLightValidateDirective.prototype.getElementMessageClass = function (el) {\n        return el.getAttribute('ui-light-validate-message-class') || 'light-message';\n    };\n    UiLightValidateDirective.prototype.getBoolValueFromAttr = function (el, attr, defaultValue) {\n        if ((el.getAttribute(attr) === undefined || el.getAttribute(attr) === '' || el.getAttribute(attr) === null)) {\n            return defaultValue;\n        }\n        else {\n            return (el.getAttribute(attr) == 'true');\n        }\n    };\n    UiLightValidateDirective.prototype.getHtmlIconElement = function (el) {\n        var htmlDivIconElement = document.createElement('div');\n        htmlDivIconElement.setAttribute('class', 'light-valid-icon');\n        var htmlIconElement = document.createElement('i');\n        htmlDivIconElement.appendChild(htmlIconElement);\n        return htmlDivIconElement;\n    };\n    UiLightValidateDirective.prototype.getHtmlErrorElement = function (el) {\n        var htmlSpanElement = document.createElement('span');\n        var htmlSpanElementClass = this.getElementMessageClass(el);\n        htmlSpanElement.setAttribute('class', htmlSpanElementClass);\n        return htmlSpanElement;\n    };\n    UiLightValidateDirective.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [RESOLVER,] }] },\n        { type: ElementRef }\n    ]; };\n    __decorate([\n        Input('UiLightValidate')\n    ], UiLightValidateDirective.prototype, \"validate\", void 0);\n    __decorate([\n        Input('UiLightProperty')\n    ], UiLightValidateDirective.prototype, \"property\", void 0);\n    __decorate([\n        Input('UiLightTarget')\n    ], UiLightValidateDirective.prototype, \"target\", void 0);\n    __decorate([\n        Output('UiLightOnValidate')\n    ], UiLightValidateDirective.prototype, \"onValidate\", void 0);\n    UiLightValidateDirective = __decorate([\n        Directive({\n            selector: '[UiLightValidate]'\n        }),\n        __param(0, Inject(RESOLVER))\n    ], UiLightValidateDirective);\n    return UiLightValidateDirective;\n}());\n\nvar ɵ0 = undefined;\nvar UiLightValidateModule = /** @class */ (function () {\n    function UiLightValidateModule() {\n    }\n    UiLightValidateModule_1 = UiLightValidateModule;\n    UiLightValidateModule.forRoot = function (resolver) {\n        return {\n            ngModule: UiLightValidateModule_1,\n            providers: [\n                { provide: RESOLVER, useValue: resolver }\n            ]\n        };\n    };\n    var UiLightValidateModule_1;\n    UiLightValidateModule = UiLightValidateModule_1 = __decorate([\n        NgModule({\n            declarations: [UiLightValidateDirective],\n            exports: [UiLightValidateDirective],\n            providers: [\n                { provide: RESOLVER, useValue: ɵ0 }\n            ]\n        })\n    ], UiLightValidateModule);\n    return UiLightValidateModule;\n}());\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { UiLightValidateDirective, UiLightValidateModule, ɵ0, RESOLVER as ɵa };\n//# sourceMappingURL=light-validate-angular-ui.js.map\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container-fluid pt-2\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-12 form-group\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12 form-group\\\">\\n              <label class=\\\"control-label\\\">Name</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"appModel.name\\\"\\n                [UiLightValidate]=\\\"lightRuleMapping\\\" UiLightProperty=\\\"name\\\" [UiLightTarget]=\\\"appModel\\\">\\n            </div>\\n            <div class=\\\"col-12 form-group\\\">\\n              <label class=\\\"control-label\\\">UserName</label>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"appModel.username\\\"\\n                [UiLightValidate]=\\\"lightRuleMapping\\\" UiLightProperty=\\\"username\\\" [UiLightTarget]=\\\"appModel\\\">\\n            </div>\\n            <div class=\\\"col-12 form-group\\\">\\n              <label class=\\\"control-label\\\">Password</label>\\n              <input class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"appModel.password\\\"\\n                [UiLightValidate]=\\\"lightRuleMapping\\\" UiLightProperty=\\\"password\\\" [UiLightTarget]=\\\"appModel\\\">\\n            </div>\\n            <div class=\\\"col-12 form-group\\\">\\n              <label class=\\\"control-label\\\">ConfirmPassword</label>\\n              <input class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"Confirm Password\\\"\\n                [(ngModel)]=\\\"appModel.confirmPassword\\\" [UiLightValidate]=\\\"lightRuleMapping\\\"\\n                UiLightProperty=\\\"confirmPassword\\\" [UiLightTarget]=\\\"appModel\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-12 col-md-12 form-group\\\">\\n      <b>See code below</b>\\n      <hr>\\n    </div>\\n    <div class=\\\"col-12 col-md-12 form-group\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          component.ts\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <pre>\\n            <code>{{getHtmlComponent()}}</code>\\n          </pre>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-12 col-md-12 form-group\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          model.light-mapping.ts\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <pre>\\n                <code>{{getHtmlLightMapping()}}</code>\\n              </pre>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-12 col-md-12 form-group\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          component.html\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <pre>\\n              <code>{{getHtmlTemplate()}}</code>\\n            </pre>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { UserLightMapping } from 'src/light-validate/user.light-mapping';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  public title = 'light-validate-angular-ui';\n\n  constructor() { }\n\n  public lightRuleMapping = UserLightMapping;\n\n  public appModel: Partial<UserLightMapping> = {};\n\n  public getHtmlTemplate(){\n    return require('./template.json');\n  }\n\n  public getHtmlComponent(){\n    return require('./component.json');\n  }\n\n  public getHtmlLightMapping(){\n    return require('./lightmapping.json');\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { UiLightValidateModule } from 'light-validate-angular-ui';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    UiLightValidateModule.forRoot({\n      label: (exception) => {\n        return `${exception.code} ${exception.property}`;\n      }\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { LightRule } from 'light-validate';\n\nexport const LightRuleMustBeTheSame = (property) => {\n  const rule: LightRule = async (value, target) => {\n    if (value !== target[property]) {\n      throw 'Value must be the same';\n    }\n  }\n  return rule;\n}\n","import { LightRule } from 'light-validate';\n\nexport const LightRuleMustNotBeTheSame = (property) => {\n  const rule: LightRule = async (value, target) => {\n    if (value === target[property]) {\n      throw 'Value must not be the same';\n    }\n  }\n  return rule;\n}\n","import { LightRule } from 'light-validate';\n\nexport const LightRuleOnlyNumber: LightRule = async (value, target) => {\n  if ((typeof value) !== 'number') {\n    throw 'Value is not a Number';\n  }\n}\n","import { LightRule } from 'light-validate';\n\nexport const LightRuleOnlyText: LightRule = async (value, target) => {\n  if ((typeof value) !== 'string') {\n    throw 'Value is not a Text';\n  }\n}\n","import { LightRule } from 'light-validate';\n\nexport const LightRuleRequired: LightRule = async (value, target) => {\n  if (!value) {\n    throw 'Value must be not empty';\n  }\n}\n","import { LightValidate } from 'light-validate';\nimport { LightRuleOnlyText } from './light-rule-only-text';\nimport { LightRuleOnlyNumber } from './light-rule-only-number';\nimport { LightRuleMustNotBeTheSame } from './light-rule-must-not-be-the-same';\nimport { LightRuleMustBeTheSame } from './light-rule-must-be-the-same';\nimport { LightRuleRequired } from './light-rule-required';\n\nexport class UserLightMapping {\n\n  @LightValidate(LightRuleRequired, LightRuleOnlyText)\n  public name: string = undefined;\n\n  @LightValidate(LightRuleRequired, LightRuleOnlyText, LightRuleMustNotBeTheSame('name'))\n  public username: string = undefined;\n\n  @LightValidate(LightRuleRequired, LightRuleOnlyNumber)\n  public password: string = undefined;\n\n  @LightValidate(LightRuleRequired, LightRuleOnlyNumber, LightRuleMustBeTheSame('password'))\n  public confirmPassword: string = undefined;\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}